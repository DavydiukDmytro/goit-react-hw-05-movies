{"version":3,"file":"static/js/998.19183b08.chunk.js","mappings":"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","sources":["page/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","page/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  background-color: #444950;\n  font-size: 25px;\n  font-weight: 500;\n  padding: 5px 10px;\n  border-radius: 10px;\n  &:hover {\n    color: var(--color-acceent);\n    background-color: #111;\n  }\n`;\nexport const SubTitle = styled.h2`\n  margin-top: 30px;\n  font-size: 30px;\n  color: var(--color-acceent);\n  margin-bottom: 15px;\n`;\n\nexport const LinkTo = styled(NavLink)`\n  justify-content: center;\n  align-items: center;\n  margin-right: 20px;\n\n  font-size: 24px;\n  font-weight: bold;\n\n  height: 100%;\n\n  &:focus,\n  &:hover {\n    color: var(--color-acceent);\n  }\n\n  &.active {\n    color: var(--color-acceent);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  margin-top: 40px;\n`;\n\nexport const TextInfo = styled.div`\n  margin-left: 30px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n  width: 400px;\n  height: 600px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 65px;\n  color: var(--color-acceent);\n`;\nexport const SubTitle = styled.h2`\n  margin-top: 30px;\n  font-size: 30px;\n`;\nexport const Text = styled.p`\n  margin-top: 20px;\n  font-size: 22px;\n`;\nexport const ListIItem = styled.li`\n  margin-top: 14px;\n  font-size: 22px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContainerInfo,\n  TextInfo,\n  Img,\n  Title,\n  SubTitle,\n  Text,\n  ListIItem,\n} from './MovieInfo.styled';\nimport placeholderImage from 'images/movie.png';\n\nexport const MovieInfo = ({ movie }) => {\n  return (\n    <ContainerInfo>\n      <Img\n        className=\"img\"\n        alt={movie.title}\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w400${movie.poster_path}`\n            : placeholderImage\n        }\n      />\n      <TextInfo>\n        <Title>{movie.original_title}</Title>\n        <SubTitle>Overview</SubTitle>\n        <Text>{movie.overview}</Text>\n        <SubTitle>Genres</SubTitle>\n        {movie.genres && (\n          <ul>\n            {movie.genres.map(genre => (\n              <ListIItem key={genre.id}>{genre.name}</ListIItem>\n            ))}\n          </ul>\n        )}\n      </TextInfo>\n    </ContainerInfo>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }).isRequired,\n};\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovie } from 'services/api';\nimport { Suspense } from 'react';\nimport { BackLink, SubTitle, LinkTo } from './MovieDetails.styled';\nimport { MovieInfo } from 'components/MovieInfo';\nimport { Loader } from 'components/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n  const [isLoad, setIsLoad] = useState(false);\n  const controllerRef = useRef(new AbortController());\n  const controller = controllerRef.current;\n\n  useEffect(() => {\n    setIsLoad(true);\n    fetchMovie(movieId, controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, [controller, movieId]);\n\n  const fetchMovie = async (id, signal) => {\n    try {\n      const response = await getMovie(id, signal);\n      if (response.id) {\n        setMovie(response);\n      }\n      setError(response?.message || null);\n      setIsLoad(false);\n    } catch (error) {\n      setError(error);\n      setIsLoad(false);\n    }\n  };\n  return (\n    <>\n      <BackLink to={backLinkLocation.current}>Back</BackLink>\n      {movie && (\n        <>\n          <MovieInfo movie={movie} />\n          <SubTitle>Additional information</SubTitle>\n          <LinkTo to={`cast`}>Cast</LinkTo>\n          <LinkTo to={`reviews`}>Reviews</LinkTo>\n        </>\n      )}\n      {isLoad && <Loader />}\n      {error && (\n        <>\n          <h1 className=\"title\">\n            Oops, something went wrong, please try again later.\n          </h1>\n          <p style={{ textAlign: 'center' }}>Error: {error}</p>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '?api_key=27e5bdbb5762b6b3d8731f5c3cd1f0f4';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getTranding = async signal => {\n  const url = `/trending/all/day${KEY}`;\n  return await makeRequest(url, { signal });\n};\n\nexport const getMovie = async (id, signal) => {\n  const urlMovieDetails = `/movie/${id}${KEY}`;\n  return await makeRequest(urlMovieDetails, { signal });\n};\n\nexport const getMovieCredits = async (id, signal) => {\n  const urlMovieCredits = `/movie/${id}/credits${KEY}`;\n  return await makeRequest(urlMovieCredits, { signal });\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const urlMovieReviews = `/movie/${id}/reviews${KEY}`;\n  return await makeRequest(urlMovieReviews, { signal });\n};\n\nexport const getMovieSearchWord = async (searchWord, signal) => {\n  const urlSearchWord = `/search/movie${KEY}&query=${searchWord}`;\n  return await makeRequest(urlSearchWord);\n};\n\nconst makeRequest = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, params);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["BackLink","styled","Link","SubTitle","LinkTo","NavLink","ContainerInfo","TextInfo","Img","Title","Text","ListIItem","MovieInfo","movie","className","alt","title","src","poster_path","placeholderImage","original_title","overview","genres","map","genre","name","id","movieId","useParams","useState","setMovie","error","setError","location","useLocation","backLinkLocation","useRef","state","from","isLoad","setIsLoad","controller","AbortController","current","useEffect","fetchMovie","signal","abort","getMovie","response","message","to","Loader","style","textAlign","Suspense","fallback","KEY","axios","getTranding","url","makeRequest","urlMovieDetails","getMovieCredits","urlMovieCredits","getMovieReviews","urlMovieReviews","getMovieSearchWord","searchWord","urlSearchWord","params","data"],"sourceRoot":""}