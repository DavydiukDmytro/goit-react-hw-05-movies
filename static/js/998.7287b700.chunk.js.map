{"version":3,"file":"static/js/998.7287b700.chunk.js","mappings":"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","sources":["page/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","page/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  background-color: #444950;\n  font-size: 25px;\n  font-weight: 500;\n  padding: 5px 10px;\n  border-radius: 10px;\n  &:hover {\n    color: var(--color-acceent);\n    background-color: #111;\n  }\n`;\nexport const SubTitle = styled.h2`\n  margin-top: 30px;\n  font-size: 30px;\n  color: var(--color-acceent);\n  margin-bottom: 15px;\n`;\n\nexport const LinkTo = styled(NavLink)`\n  justify-content: center;\n  align-items: center;\n  margin-right: 20px;\n\n  font-size: 24px;\n  font-weight: bold;\n\n  height: 100%;\n\n  &:focus,\n  &:hover {\n    color: var(--color-acceent);\n  }\n\n  &.active {\n    color: var(--color-acceent);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  margin-top: 40px;\n`;\n\nexport const TextInfo = styled.div`\n  margin-left: 30px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 65px;\n  color: var(--color-acceent);\n`;\nexport const SubTitle = styled.h2`\n  margin-top: 30px;\n  font-size: 30px;\n`;\nexport const Text = styled.p`\n  margin-top: 20px;\n  font-size: 22px;\n`;\nexport const ListIItem = styled.li`\n  margin-top: 14px;\n  font-size: 22px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ContainerInfo,\n  TextInfo,\n  Img,\n  Title,\n  SubTitle,\n  Text,\n  ListIItem,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movie }) => {\n  return (\n    <ContainerInfo>\n      <Img\n        className=\"img\"\n        alt={movie.original_title}\n        src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n      />\n      <TextInfo>\n        <Title>{movie.original_title}</Title>\n        <SubTitle>Overview</SubTitle>\n        <Text>{movie.overview}</Text>\n        <SubTitle>Genres</SubTitle>\n        {movie.genres && (\n          <ul>\n            {movie.genres.map(genre => (\n              <ListIItem key={genre.id}>{genre.name}</ListIItem>\n            ))}\n          </ul>\n        )}\n      </TextInfo>\n    </ContainerInfo>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovie } from 'services/api';\nimport { Suspense } from 'react';\nimport { BackLink, SubTitle, LinkTo } from './MovieDetails.styled';\nimport { MovieInfo } from 'components/MovieInfo';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n  const controllerRef = useRef(new AbortController());\n  const controller = controllerRef.current;\n\n  useEffect(() => {\n    fetchMovie(movieId, controller.signal);\n\n    return () => {\n      controller.abort();\n    };\n  }, [controller, movieId]);\n\n  const fetchMovie = async (id, signal) => {\n    try {\n      const response = await getMovie(id, signal);\n      if (response.id) {\n        setMovie(response);\n      }\n      setError(response?.message || null);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  return (\n    <>\n      <BackLink to={backLinkLocation.current}>Back</BackLink>\n      {movie && (\n        <>\n          <MovieInfo movie={movie} />\n          <SubTitle>Additional information</SubTitle>\n          <LinkTo to={`cast`}>Cast</LinkTo>\n          <LinkTo to={`reviews`}>Reviews</LinkTo>\n        </>\n      )}\n      {error && (\n        <>\n          <h1 className=\"title\">\n            Oops, something went wrong, please try again later.\n          </h1>\n          <p style={{ textAlign: 'center' }}>Error: {error}</p>\n        </>\n      )}\n      <Suspense\n        fallback={\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#9fa9b5\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '?api_key=27e5bdbb5762b6b3d8731f5c3cd1f0f4';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getTranding = async signal => {\n  const url = `/trending/all/day${KEY}`;\n  return await makeRequest(url, { signal });\n};\n\nexport const getMovie = async (id, signal) => {\n  const urlMovieDetails = `/movie/${id}${KEY}`;\n  return await makeRequest(urlMovieDetails, { signal });\n};\n\nexport const getMovieCredits = async (id, signal) => {\n  const urlMovieCredits = `/movie/${id}/credits${KEY}`;\n  return await makeRequest(urlMovieCredits, { signal });\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const urlMovieReviews = `/movie/${id}/reviews${KEY}`;\n  return await makeRequest(urlMovieReviews, { signal });\n};\n\nexport const getMovieSearchWord = async (searchWord, signal) => {\n  const urlSearchWord = `/search/movie${KEY}&query=${searchWord}`;\n  return await makeRequest(urlSearchWord);\n};\n\nconst makeRequest = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, params);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["BackLink","styled","Link","SubTitle","LinkTo","NavLink","ContainerInfo","TextInfo","Img","Title","Text","ListIItem","MovieInfo","movie","className","alt","original_title","src","poster_path","overview","genres","map","genre","name","id","movieId","useParams","useState","setMovie","error","setError","location","useLocation","backLinkLocation","useRef","state","from","controller","AbortController","current","useEffect","fetchMovie","signal","abort","getMovie","response","message","to","style","textAlign","Suspense","fallback","height","width","radius","color","ariaLabel","wrapperClassName","visible","KEY","axios","getTranding","url","makeRequest","urlMovieDetails","getMovieCredits","urlMovieCredits","getMovieReviews","urlMovieReviews","getMovieSearchWord","searchWord","urlSearchWord","params","data"],"sourceRoot":""}