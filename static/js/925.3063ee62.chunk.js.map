{"version":3,"file":"static/js/925.3063ee62.chunk.js","mappings":"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","sources":["components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","page/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryItem = styled.li`\n  background-color: #444950;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoveiLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n`;\nexport const MoveiImg = styled.img`\n  background-color: #1c1e21;\n  width: 100%;\n  height: 195px;\n`;\n\nexport const MoveiTitle = styled.h2`\n  padding: 10px 0;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  MoveiLink,\n  MoveiImg,\n  MoveiTitle,\n} from './MoviesGalleryItem.styled';\nimport placeholderImage from 'images/movie.png';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesGalleryItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <GalleryItem>\n      <MoveiLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MoveiImg\n          className=\"img\"\n          alt={movie.title}\n          width=\"400px\"\n          src={\n            movie.backdrop_path\n              ? `https://image.tmdb.org/t/p/w300${movie.backdrop_path}`\n              : movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n              : placeholderImage\n          }\n        />\n        <MoveiTitle>\n          {movie.title ||\n            movie.name ||\n            movie.original_title ||\n            movie.original_name ||\n            'No name'}\n        </MoveiTitle>\n      </MoveiLink>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    original_title: PropTypes.string,\n    original_name: PropTypes.string,\n    backdrop_path: PropTypes.string,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Gallery } from './MoviesGallery.styled';\nimport { MoviesGalleryItem } from 'components/MoviesGalleryItem';\n\nexport const MoviesGallery = ({ moviesArr }) => {\n  return (\n    <Gallery>\n      {moviesArr.map(trandingMovie => (\n        <MoviesGalleryItem key={trandingMovie.id} movie={trandingMovie} />\n      ))}\n    </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n};\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormSearch = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #444950;\n  border-radius: 10px;\n  overflow: hidden;\n  margin: 0 auto;\n  margin-bottom: 30px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: var(--color-acceent);\n  background-color: #444950;\n  &:hover {\n    background-color: var(--color-acceent);\n    color: #444950;\n  }\n`;\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  height: 48px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: var(--color-acceent);\n  background-color: #444950;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  FormSearch,\n  SearchButton,\n  SearchInput,\n  SearchButtonLabel,\n} from './SearchForm.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const SearchForm = ({ searchWord, handleSubmit }) => {\n  return (\n    <Formik initialValues={{ searchWord }} onSubmit={handleSubmit}>\n      <FormSearch>\n        <SearchButton type=\"submit\">\n          <AiOutlineSearch\n            className=\"img\"\n            style={{ width: '80%', height: 'auto' }}\n          />\n          <SearchButtonLabel>Search</SearchButtonLabel>\n        </SearchButton>\n        <SearchInput type=\"text\" name=\"searchWord\" />\n      </FormSearch>\n    </Formik>\n  );\n};\n\nSearchForm.propTypes = {\n  searchWord: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { getMovieSearchWord } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesGallery } from 'components/MoviesGallery';\nimport { SearchForm } from 'components/SearchForm';\nimport { Loader } from 'components/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [errorMasseg, setErrorMasseg] = useState(null);\n  const [isLoad, setIsLoad] = useState(false);\n  const controllerRef = useRef(new AbortController());\n  const controller = controllerRef.current;\n\n  const handleSubmit = value => {\n    setMovies([]);\n    setIsLoad(true);\n    const searchWord = value.searchWord.trim();\n    const nextParams = searchWord !== '' ? { name: searchWord } : {};\n    setSearchParams(nextParams);\n  };\n\n  const searchWord = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (searchWord !== '') {\n      fetchSearchWord(searchWord, controller.signal);\n    } else {\n      setMovies([]);\n    }\n    return () => {\n      controller.abort();\n    };\n  }, [controller, searchWord]);\n\n  const fetchSearchWord = async (searchWord, signal) => {\n    try {\n      const response = await getMovieSearchWord(searchWord, signal);\n      setMovies(response?.results || []);\n      setErrorMasseg(response?.message || null);\n      if (response.results?.length < 1) {\n        setErrorMasseg(`We didn't find anything behind this word`);\n      }\n      setIsLoad(false);\n    } catch (error) {\n      setErrorMasseg(error?.message || 'Error');\n      setIsLoad(false);\n    }\n  };\n\n  return (\n    <>\n      <SearchForm searchWord={searchWord} handleSubmit={handleSubmit} />\n      {movies.length !== 0 ? (\n        <MoviesGallery moviesArr={movies} />\n      ) : (\n        !isLoad && <p className=\"sub-title\">Enter a keyword and hit search</p>\n      )}\n      {isLoad && <Loader />}\n      {errorMasseg && <h1 className=\"title\">{errorMasseg}</h1>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '?api_key=27e5bdbb5762b6b3d8731f5c3cd1f0f4';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getTranding = async signal => {\n  const url = `/trending/all/day${KEY}`;\n  return await makeRequest(url, { signal });\n};\n\nexport const getMovie = async (id, signal) => {\n  const urlMovieDetails = `/movie/${id}${KEY}`;\n  return await makeRequest(urlMovieDetails, { signal });\n};\n\nexport const getMovieCredits = async (id, signal) => {\n  const urlMovieCredits = `/movie/${id}/credits${KEY}`;\n  return await makeRequest(urlMovieCredits, { signal });\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const urlMovieReviews = `/movie/${id}/reviews${KEY}`;\n  return await makeRequest(urlMovieReviews, { signal });\n};\n\nexport const getMovieSearchWord = async (searchWord, signal) => {\n  const urlSearchWord = `/search/movie${KEY}&query=${searchWord}`;\n  return await makeRequest(urlSearchWord);\n};\n\nconst makeRequest = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, params);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["Gallery","styled","GalleryItem","MoveiLink","Link","MoveiImg","MoveiTitle","MoviesGalleryItem","movie","location","useLocation","to","id","state","from","className","alt","title","width","src","backdrop_path","poster_path","placeholderImage","name","original_title","original_name","MoviesGallery","moviesArr","map","trandingMovie","FormSearch","Form","SearchButton","SearchButtonLabel","SearchInput","Field","SearchForm","searchWord","handleSubmit","initialValues","onSubmit","type","style","height","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","errorMasseg","setErrorMasseg","isLoad","setIsLoad","controller","useRef","AbortController","current","get","useEffect","fetchSearchWord","signal","abort","getMovieSearchWord","response","results","message","length","value","trim","Loader","KEY","axios","getTranding","url","makeRequest","getMovie","urlMovieDetails","getMovieCredits","urlMovieCredits","getMovieReviews","urlMovieReviews","urlSearchWord","params","data"],"sourceRoot":""}