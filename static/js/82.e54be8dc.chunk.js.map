{"version":3,"file":"static/js/82.e54be8dc.chunk.js","mappings":"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","sources":["components/CastListItem/CastListItem.styled.jsx","components/CastListItem/CastListItem.jsx","page/Cast.styled.jsx","page/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding-bottom: 10px;\n  background-color: #444950;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Img = styled.img`\n  background-color: #444950;\n  width: 100%;\n  height: 320px;\n`;\n\nexport const Title = styled.p`\n  color: var(--color-acceent);\n  margin-top: 10px;\n  margin-left: 10px;\n  font-size: 22px;\n`;\nexport const Text = styled.p`\n  margin-left: 10px;\n  margin-top: 5px;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Img, Title, Text } from './CastListItem.styled';\nimport placeholderImage from 'images/movie.png';\n\nexport const CastListItem = ({ cast }) => {\n  return (\n    <Item>\n      <Img\n        className=\"img\"\n        alt={cast.name}\n        src={\n          cast.profile_path\n            ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n            : placeholderImage\n        }\n        onError={e => {\n          e.target.src = placeholderImage;\n        }}\n      />\n      <Title>Name:</Title>\n      <Text>{cast.name}</Text>\n      <Title>Character:</Title>\n      <Text>{cast.character}</Text>\n    </Item>\n  );\n};\n\nCastListItem.propTypes = {\n  cast: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n`;\nexport const Title = styled.h2`\n  padding: 10px 0;\n  font-size: 30px;\n  font-weight: 500;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieCredits } from 'services/api';\nimport { CastListItem } from 'components/CastListItem';\nimport { List, Title } from './Cast.styled';\nimport { Loader } from 'components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoad, setIsLoad] = useState(false);\n  const controllerRef = useRef(new AbortController());\n  const controller = controllerRef.current;\n\n  useEffect(() => {\n    setIsLoad(true);\n    fetchCast(movieId, controller.signal);\n    return () => {\n      controller.abort();\n    };\n  }, [controller, movieId]);\n\n  const fetchCast = async (id, signal) => {\n    try {\n      const response = await getMovieCredits(id, signal);\n      setCastList(response?.cast || null);\n      setError(response?.message || null);\n      setIsLoad(false);\n    } catch (error) {\n      setError(error);\n      setIsLoad(false);\n    }\n  };\n\n  return (\n    <>\n      {castList && (\n        <List>\n          {castList.map(cast => (\n            <CastListItem key={cast.cast_id} cast={cast} />\n          ))}\n        </List>\n      )}\n      {isLoad && <Loader />}\n      {error && (\n        <>\n          <Title>Oops, something went wrong, please try again later.</Title>\n          <p>Error: {error}</p>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '?api_key=27e5bdbb5762b6b3d8731f5c3cd1f0f4';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getTranding = async signal => {\n  const url = `/trending/all/day${KEY}`;\n  return await makeRequest(url, { signal });\n};\n\nexport const getMovie = async (id, signal) => {\n  const urlMovieDetails = `/movie/${id}${KEY}`;\n  return await makeRequest(urlMovieDetails, { signal });\n};\n\nexport const getMovieCredits = async (id, signal) => {\n  const urlMovieCredits = `/movie/${id}/credits${KEY}`;\n  return await makeRequest(urlMovieCredits, { signal });\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const urlMovieReviews = `/movie/${id}/reviews${KEY}`;\n  return await makeRequest(urlMovieReviews, { signal });\n};\n\nexport const getMovieSearchWord = async (searchWord, signal) => {\n  const urlSearchWord = `/search/movie${KEY}&query=${searchWord}`;\n  return await makeRequest(urlSearchWord);\n};\n\nconst makeRequest = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, params);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["Item","styled","Img","Title","Text","CastListItem","cast","className","alt","name","src","profile_path","placeholderImage","onError","e","target","character","List","movieId","useParams","useState","castList","setCastList","error","setError","isLoad","setIsLoad","controller","useRef","AbortController","current","useEffect","fetchCast","signal","abort","id","getMovieCredits","response","message","map","cast_id","Loader","KEY","axios","getTranding","url","makeRequest","getMovie","urlMovieDetails","urlMovieCredits","getMovieReviews","urlMovieReviews","getMovieSearchWord","searchWord","urlSearchWord","params","data"],"sourceRoot":""}