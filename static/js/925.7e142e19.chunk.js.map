{"version":3,"file":"static/js/925.7e142e19.chunk.js","mappings":"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","sources":["components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","page/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryItem = styled.li`\n  background-color: #444950;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoveiLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n`;\nexport const MoveiImg = styled.img`\n  background-color: #1c1e21;\n  width: 100%;\n  height: 195px;\n`;\n\nexport const MoveiTitle = styled.h2`\n  padding: 10px 0;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  MoveiLink,\n  MoveiImg,\n  MoveiTitle,\n} from './MoviesGalleryItem.styled';\nimport placeholderImage from 'images/movie.png';\n\nexport const MoviesGalleryItem = ({ movie, location, linkTo }) => {\n  return (\n    <GalleryItem>\n      <MoveiLink to={`${linkTo}${movie.id}`} state={{ from: location }}>\n        <MoveiImg\n          className=\"img\"\n          alt={movie.title}\n          width=\"400px\"\n          src={`https://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\n          onError={e => {\n            e.target.src = placeholderImage;\n          }}\n        />\n        <MoveiTitle> {movie.title || 'No name'}</MoveiTitle>\n      </MoveiLink>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string,\n    title: PropTypes.string,\n  }),\n  location: PropTypes.object,\n  linkTo: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Gallery } from './MoviesGallery.styled';\nimport { MoviesGalleryItem } from 'components/MoviesGalleryItem';\n\nexport const MoviesGallery = ({ moviesArr, location, linkTo }) => {\n  return (\n    <Gallery>\n      {moviesArr.map(trandingMovie => (\n        <MoviesGalleryItem\n          key={trandingMovie.id}\n          movie={trandingMovie}\n          location={location}\n          linkTo={linkTo}\n        />\n      ))}\n    </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n  location: PropTypes.object,\n  linkTo: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormSearch = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #444950;\n  border-radius: 10px;\n  overflow: hidden;\n  margin: 0 auto;\n  margin-bottom: 30px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: var(--color-acceent);\n  background-color: #444950;\n  &:hover {\n    background-color: var(--color-acceent);\n    color: #444950;\n  }\n`;\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  height: 48px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: var(--color-acceent);\n  background-color: #444950;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  FormSearch,\n  SearchButton,\n  SearchInput,\n  SearchButtonLabel,\n} from './SearchForm.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const SearchForm = ({ searchWord, handleSubmit }) => {\n  return (\n    <Formik initialValues={{ searchWord }} onSubmit={handleSubmit}>\n      <FormSearch>\n        <SearchButton type=\"submit\">\n          <AiOutlineSearch\n            className=\"img\"\n            style={{ width: '80%', height: 'auto' }}\n          />\n          <SearchButtonLabel>Search</SearchButtonLabel>\n        </SearchButton>\n        <SearchInput type=\"text\" name=\"searchWord\" />\n      </FormSearch>\n    </Formik>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { getMovieSearchWord } from 'services/api';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { MoviesGallery } from 'components/MoviesGallery';\nimport { SearchForm } from 'components/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchWord, setSearchWord] = useState(searchParams.get('name') ?? '');\n  const [errorMasseg, setErrorMasseg] = useState(null);\n  const location = useLocation();\n  const controllerRef = useRef(new AbortController());\n  const controller = controllerRef.current;\n  const handleSubmit = value => {\n    const searchWord = value.searchWord.trim();\n    const nextParams = searchWord !== '' ? { name: searchWord } : {};\n    setSearchParams(nextParams);\n    setSearchWord(searchWord);\n  };\n\n  useEffect(() => {\n    if (searchWord !== '') {\n      fetchSearchWord(searchWord, controller.signal);\n    } else {\n      setMovies([]);\n    }\n    return () => {\n      controller.abort();\n    };\n  }, [controller, searchWord]);\n\n  const fetchSearchWord = async (searchWord, signal) => {\n    try {\n      const response = await getMovieSearchWord(searchWord, signal);\n      setMovies(response?.results || []);\n      setErrorMasseg(response?.message || null);\n      if (response.results?.length < 1) {\n        setErrorMasseg(`We didn't find anything behind this word`);\n      }\n    } catch (error) {\n      setErrorMasseg(error?.message || 'Error');\n    }\n  };\n\n  return (\n    <>\n      <SearchForm searchWord={searchWord} handleSubmit={handleSubmit} />\n      {movies.length > 0 ? (\n        <MoviesGallery moviesArr={movies} location={location} linkTo={''} />\n      ) : (\n        <p className=\"sub-title\">Enter a keyword and hit search</p>\n      )}\n      {errorMasseg && <h1 className=\"title\">{errorMasseg}</h1>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '?api_key=27e5bdbb5762b6b3d8731f5c3cd1f0f4';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getTranding = async signal => {\n  const url = `/trending/all/day${KEY}`;\n  return await makeRequest(url, { signal });\n};\n\nexport const getMovie = async (id, signal) => {\n  const urlMovieDetails = `/movie/${id}${KEY}`;\n  return await makeRequest(urlMovieDetails, { signal });\n};\n\nexport const getMovieCredits = async (id, signal) => {\n  const urlMovieCredits = `/movie/${id}/credits${KEY}`;\n  return await makeRequest(urlMovieCredits, { signal });\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const urlMovieReviews = `/movie/${id}/reviews${KEY}`;\n  return await makeRequest(urlMovieReviews, { signal });\n};\n\nexport const getMovieSearchWord = async (searchWord, signal) => {\n  const urlSearchWord = `/search/movie${KEY}&query=${searchWord}`;\n  return await makeRequest(urlSearchWord);\n};\n\nconst makeRequest = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, params);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["Gallery","styled","GalleryItem","MoveiLink","Link","MoveiImg","MoveiTitle","MoviesGalleryItem","movie","location","linkTo","to","id","state","from","className","alt","title","width","src","backdrop_path","onError","e","target","placeholderImage","MoviesGallery","moviesArr","map","trandingMovie","FormSearch","Form","SearchButton","SearchButtonLabel","SearchInput","Field","SearchForm","searchWord","handleSubmit","initialValues","onSubmit","type","style","height","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","setSearchWord","errorMasseg","setErrorMasseg","useLocation","controller","useRef","AbortController","current","useEffect","fetchSearchWord","signal","abort","getMovieSearchWord","response","results","message","length","value","trim","KEY","axios","getTranding","url","makeRequest","getMovie","urlMovieDetails","getMovieCredits","urlMovieCredits","getMovieReviews","urlMovieReviews","urlSearchWord","params","data"],"sourceRoot":""}