{"version":3,"file":"static/js/468.21f599a3.chunk.js","mappings":"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","sources":["components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","page/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GalleryItem = styled.li`\n  background-color: #444950;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoveiLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n`;\nexport const MoveiImg = styled.img`\n  background-color: #1c1e21;\n  width: 100%;\n  height: 195px;\n`;\n\nexport const MoveiTitle = styled.h2`\n  padding: 10px 0;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  MoveiLink,\n  MoveiImg,\n  MoveiTitle,\n} from './MoviesGalleryItem.styled';\nimport placeholderImage from 'images/movie.png';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesGalleryItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <GalleryItem>\n      <MoveiLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MoveiImg\n          className=\"img\"\n          alt={movie.title}\n          width=\"400px\"\n          src={\n            movie.backdrop_path\n              ? `https://image.tmdb.org/t/p/w300${movie.backdrop_path}`\n              : movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n              : placeholderImage\n          }\n        />\n        <MoveiTitle>\n          {movie.title ||\n            movie.name ||\n            movie.original_title ||\n            movie.original_name ||\n            'No name'}\n        </MoveiTitle>\n      </MoveiLink>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    original_title: PropTypes.string,\n    original_name: PropTypes.string,\n    backdrop_path: PropTypes.string,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Gallery } from './MoviesGallery.styled';\nimport { MoviesGalleryItem } from 'components/MoviesGalleryItem';\n\nexport const MoviesGallery = ({ moviesArr }) => {\n  return (\n    <Gallery>\n      {moviesArr.map(trandingMovie => (\n        <MoviesGalleryItem key={trandingMovie.id} movie={trandingMovie} />\n      ))}\n    </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired })\n  ),\n};\nMoviesGallery.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { getTranding } from 'services/api';\nimport { useEffect, useState, useRef } from 'react';\nimport { MoviesGallery } from 'components/MoviesGallery';\nimport { Loader } from 'components/Loader';\n\nconst Home = () => {\n  const [trandingList, setTrandingList] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const controllerRef = useRef(new AbortController());\n  const controller = controllerRef.current;\n\n  useEffect(() => {\n    setIsLoad(true);\n    fetchTranding(controller.signal);\n    return () => {\n      controller.abort();\n    };\n  }, [controller]);\n\n  const fetchTranding = async signal => {\n    try {\n      const response = await getTranding(signal);\n      setTrandingList(response?.results || []);\n      setError(response?.message || null);\n      setIsLoad(false);\n    } catch (error) {\n      setError(error?.message || 'Error');\n      setIsLoad(false);\n    }\n  };\n\n  return (\n    <>\n      {trandingList.length !== 0 && (\n        <>\n          <h1 className=\"title\">Tranding today</h1>\n          <MoviesGallery moviesArr={trandingList} />\n        </>\n      )}\n      {isLoad && <Loader />}\n      {error && (\n        <>\n          <h1 className=\"title\">\n            Oops, something went wrong, please try again later.\n          </h1>\n          <p style={{ textAlign: 'center' }}>Error: {error}</p>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = '?api_key=27e5bdbb5762b6b3d8731f5c3cd1f0f4';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const getTranding = async signal => {\n  const url = `/trending/all/day${KEY}`;\n  return await makeRequest(url, { signal });\n};\n\nexport const getMovie = async (id, signal) => {\n  const urlMovieDetails = `/movie/${id}${KEY}`;\n  return await makeRequest(urlMovieDetails, { signal });\n};\n\nexport const getMovieCredits = async (id, signal) => {\n  const urlMovieCredits = `/movie/${id}/credits${KEY}`;\n  return await makeRequest(urlMovieCredits, { signal });\n};\n\nexport const getMovieReviews = async (id, signal) => {\n  const urlMovieReviews = `/movie/${id}/reviews${KEY}`;\n  return await makeRequest(urlMovieReviews, { signal });\n};\n\nexport const getMovieSearchWord = async (searchWord, signal) => {\n  const urlSearchWord = `/search/movie${KEY}&query=${searchWord}`;\n  return await makeRequest(urlSearchWord);\n};\n\nconst makeRequest = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, params);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["Gallery","styled","GalleryItem","MoveiLink","Link","MoveiImg","MoveiTitle","MoviesGalleryItem","movie","location","useLocation","to","id","state","from","className","alt","title","width","src","backdrop_path","poster_path","placeholderImage","name","original_title","original_name","MoviesGallery","moviesArr","map","trandingMovie","useState","trandingList","setTrandingList","error","setError","isLoad","setIsLoad","controller","useRef","AbortController","current","useEffect","fetchTranding","signal","abort","getTranding","response","results","message","length","style","textAlign","KEY","axios","url","makeRequest","getMovie","urlMovieDetails","getMovieCredits","urlMovieCredits","getMovieReviews","urlMovieReviews","getMovieSearchWord","searchWord","urlSearchWord","params","data"],"sourceRoot":""}